/*
    Nesse desafio, voc√™ ir√° solicitar ao usu√°rio que ele insira **dois n√∫meros** e, a partir da√≠, calcular:

    - [ ]  A soma dos dois n√∫meros;
    - [ ]  A subtra√ß√£o dos dois n√∫meros;
    - [ ]  A multiplica√ß√£o dos dois n√∫meros;
    - [ ]  A divis√£o dos dois n√∫meros;
    - [ ]  O resto da divis√£o dos dois n√∫meros;

    F√°cil at√© aqui, n√©? Bora se desafiar? üëÄ üßë‚ÄçüöÄ

    - [ ]  Verifique se a soma dos dois n√∫meros √© par ~~(ou √≠mpar)~~;
    - [ ]  Verifique se os dois n√∫meros inseridos s√£o iguais ~~(ou diferentes)~~.
*/

let numberOne = Number(prompt('Digite o primeiro n√∫mero:'));
let numberTwo = Number(prompt('Digite o segundo n√∫mero:'));

let operationsArray = [];

function operations (numberOne, numberTwo, array) {
    array.push(`A soma dos dois n√∫meros √©: ${numberOne + numberTwo}`)
    array.push(`A subtra√ß√£o dos dois n√∫meros √©: ${numberOne - numberTwo}`)
    array.push(`A multiplica√ß√£o dos dois n√∫meros √©: ${numberOne * numberTwo}`)
    array.push(`A divis√£o dos dois n√∫meros √©: ${(numberOne / numberTwo).toFixed(2)}`)
    array.push(`O resto da divis√£o dos dois n√∫meros √©: ${numberOne % numberTwo}`)
}

function verifyNumbers (numberOne, numberTwo) {
    if ((numberOne+numberTwo)%2 == 0) {
        alert(`A soma de ${numberOne} e ${numberTwo} √© par.`)
    } else {
        alert(`A soma de ${numberOne} e ${numberTwo} √© √≠mpar.`)
    }

    if (numberOne == numberTwo) {
        alert(`Os n√∫meros ${numberOne} e ${numberTwo} s√£o iguais.`)
    } else {
        alert(`Os n√∫meros ${numberOne} e ${numberTwo} s√£o diferentes.`)
    }
}

operations(numberOne, numberTwo, operationsArray)

for (let operation of operationsArray) {
    alert(operation)
}

verifyNumbers(numberOne, numberTwo)
